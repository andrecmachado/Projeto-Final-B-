package interfaces;

import controle.ControladorBiblioteca;
import java.awt.Container;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextField;
import persistencia.MapeadorRevista;
import wrapper.PegaDadosTelaCadastroProfessor;

public class TelaCadastroProfessor extends JFrame{
    private static final long serialVersionUID = 1L;
    JLabel lbMatricula, lbNome, lbIdade, lbEndereco, lbFiliacao, lbResponsavel, lbDisciplina;
    JTextField tfMatricula, tfNome, tfIdade, tfEndereco, tfFiliacao, tfResponsavel, tfDisciplina;
    JButton btSalvar, btVoltar;

    public TelaCadastroProfessor() {
        Container container = getContentPane();
        container.setLayout(new GridLayout(0,2));
        GerenciadorBotoes btManager = new GerenciadorBotoes();
        
        lbMatricula = new JLabel();
        lbNome = new JLabel();
        lbIdade = new JLabel();
        lbEndereco = new JLabel();
        lbFiliacao = new JLabel();
        lbResponsavel = new JLabel();
        lbDisciplina = new JLabel();
        tfMatricula = new JTextField();
        tfMatricula = new JTextField();
        tfNome = new JTextField();
        tfIdade = new JTextField();
        tfEndereco = new JTextField();
        tfFiliacao = new JTextField();
        tfResponsavel = new JTextField();
        tfDisciplina = new JTextField();
        btSalvar = new JButton();
        btVoltar = new JButton();
        
        lbMatricula.setText("Matrícula: ");
        lbNome.setText("Nome Completo: ");
        lbIdade.setText("Idade: ");
        lbEndereco.setText("Endereço: ");
        lbFiliacao.setText("Filiacao: ");
        lbResponsavel.setText("Responsavel da Turma: ");
        lbDisciplina.setText("Responsavel da Disciplina: ");
        btSalvar.setText("Salvar");
        btSalvar.setActionCommand("1");
        btVoltar.setText("Voltar");
        btVoltar.setActionCommand("2");
        
        btSalvar.addActionListener(btManager);
        btVoltar.addActionListener(btManager);
        
        container.add(lbMatricula);
        container.add(tfMatricula);
        container.add(lbNome);
        container.add(tfNome);
        container.add(lbIdade);
        container.add(tfIdade);
        container.add(lbEndereco);
        container.add(tfEndereco);
        container.add(lbFiliacao);
        container.add(tfFiliacao);
        container.add(lbResponsavel);
        container.add(tfResponsavel);
        container.add(lbDisciplina);
        container.add(tfDisciplina);
        container.add(btSalvar);
        container.add(btVoltar);
        
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }

    private class GerenciadorBotoes implements ActionListener{

        public GerenciadorBotoes() {}

        @Override
        public void actionPerformed(ActionEvent ae) {
            if (null != ae.getActionCommand())
                switch (ae.getActionCommand()) {
                case "1":
                    try{
                        PegaDadosTelaCadastroProfessor dados = new PegaDadosTelaCadastroProfessor();
                        int matricula = Integer.parseInt(tfMatricula.getText());
                        dados.matricula = matricula;
                        dados.nomeCompleto = tfNome.getText();
                        int idade = Integer.parseInt(tfIdade.getText());
                        dados.idade = idade;
                        dados.endereco = tfEndereco.getText();
                        dados.filiacao = tfFiliacao.getText();
                        dados.responsavel = tfResponsavel.getText();
                        dados.disciplina = tfDisciplina.getText();
                        ControladorBiblioteca.getInstance().cadastrar(dados);
                        tfMatricula.setText(null);
                        tfNome.setText(null);
                        tfIdade.setText(null);
                        tfEndereco.setText(null);
                        tfFiliacao.setText(null);
                        tfResponsavel.setText(null);
                        tfDisciplina.setText(null);                            
                    } catch (Exception e){
                        Logger.getLogger(MapeadorRevista.class.getName()).log(Level.SEVERE, null, e);
                    }   break;
                case "2":
                    try{
                        ControladorBiblioteca.getInstance().voltar();
                        tfMatricula.setText(null);
                        tfNome.setText(null);
                        tfIdade.setText(null);
                        tfEndereco.setText(null);
                        tfFiliacao.setText(null);
                        tfResponsavel.setText(null);
                        tfDisciplina.setText(null); 
                    } catch (Exception e){
                        Logger.getLogger(MapeadorRevista.class.getName()).log(Level.SEVERE, null, e);
                    }   break;
                default:
                    ControladorBiblioteca.getInstance().aviso();
                    break;
                }
        }
    }
    
}
