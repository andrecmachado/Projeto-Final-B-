package interfaces;

import controle.ControladorBiblioteca;
import dao.Pessoa;
import java.awt.Container;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import persistencia.MapeadorRevista;
import wrapper.PegaDadosTelaEmprestimo;


public class TelaEmprestimo extends JFrame{
    private static final long serialVersionUID = 1L;
    JLabel lbEmprestimo,lbLinha, lbMatricula, lbDataEmprestimo, lbDataDevolucao, lbExemplar;
    JRadioButton rbAluno, rbProfessor;
    JTextField tfEmprestimo, tfMatricula, tfDataEmprestimo, tfDataDevolucao, tfExemplar;
    JButton btSalvar, btVoltar;
    
    public TelaEmprestimo() {
        Container container = getContentPane();
        container.setLayout(new GridLayout(0,2));
        GerenciadorBotoes btManager = new GerenciadorBotoes();
        
        lbEmprestimo = new JLabel();
        lbLinha = new JLabel();
        lbMatricula = new JLabel();
        lbDataEmprestimo = new JLabel();
        lbDataDevolucao = new JLabel();
        lbExemplar = new JLabel();
        rbAluno = new JRadioButton("Aluno", false);
        rbProfessor = new JRadioButton("Professor", false);
        tfEmprestimo = new JTextField();
        tfMatricula = new JTextField();
        tfDataEmprestimo = new JTextField();
        tfDataDevolucao = new JTextField();
        tfExemplar = new JTextField();
        btSalvar = new JButton();
        btVoltar = new JButton();
        
        lbEmprestimo.setText("Empréstimo para: ");
        lbMatricula.setText("Matrícula: ");
        lbDataEmprestimo.setText("Data do Empréstimo: ");
        lbDataDevolucao.setText("Data para Devolução: ");
        lbExemplar.setText("Código do Exemplar Emprestado: ");
        btSalvar.setText("Salvar");
        btSalvar.setActionCommand("1");
        btVoltar.setText("Voltar");
        btVoltar.setActionCommand("2");
        
        btSalvar.addActionListener(btManager);
        btVoltar.addActionListener(btManager);
        rbAluno.addItemListener(btManager);
        rbProfessor.addItemListener(btManager);
        
        container.add(lbEmprestimo);
        container.add(lbLinha);
        container.add(rbAluno);
        container.add(rbProfessor);
        container.add(lbMatricula);
        container.add(tfMatricula);
        container.add(lbDataEmprestimo);
        container.add(tfDataEmprestimo);
        container.add(lbDataDevolucao);
        container.add(tfDataDevolucao);
        container.add(lbExemplar);
        container.add(tfExemplar);
        container.add(btSalvar);
        container.add(btVoltar);
        
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }

    private class GerenciadorBotoes implements ActionListener, ItemListener{

        public GerenciadorBotoes() {}

        @Override
        public void itemStateChanged(ItemEvent ie) {
            if(rbAluno.isSelected()){
                tfEmprestimo.setText("Aluno");
            }
            if(rbProfessor.isSelected()){
                tfEmprestimo.setText("Professor");
            }
        }
        
        @Override
        public void actionPerformed(ActionEvent ae) {
            if (null != ae.getActionCommand())
                switch (ae.getActionCommand()) {
                case "1":
                    try{
                        PegaDadosTelaEmprestimo dados = new PegaDadosTelaEmprestimo();
                        String opcao = tfEmprestimo.getText();
                        dados.tipoPessoa = opcao;
                        int mat = Integer.parseInt(tfMatricula.getText());
                        dados.matricula = new Pessoa(mat);
                        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
                        java.sql.Date dataE = new java.sql.Date(format.parse(tfDataEmprestimo.getText()).getTime());
                        dados.dataEmprestimo = dataE;
                        java.sql.Date dataP = new java.sql.Date(format.parse(tfDataDevolucao.getText()).getTime());
                        dados.dataPlanejadaDevolucao = dataP;
                        int cod = Integer.parseInt(tfExemplar.getText());
                        dados.codExemplarEmprestado = cod;
                        ControladorBiblioteca.getInstance().cadastrar(dados);
                        tfEmprestimo.setText(null);
                        tfMatricula.setText(null);
                        tfDataEmprestimo.setText(null);
                        tfDataDevolucao.setText(null);
                        tfExemplar.setText(null);
                    } catch (NumberFormatException | ParseException e){
                        Logger.getLogger(MapeadorRevista.class.getName()).log(Level.SEVERE, null, e);
                    }   break;
                case "2":
                    try{
                        ControladorBiblioteca.getInstance().voltar();
                        tfEmprestimo.setText(null);
                        tfMatricula.setText(null);
                        tfDataEmprestimo.setText(null);
                        tfDataDevolucao.setText(null);
                        tfExemplar.setText(null);
                    } catch (Exception e){
                        Logger.getLogger(MapeadorRevista.class.getName()).log(Level.SEVERE, null, e);
                    }   break;
                default:
                    ControladorBiblioteca.getInstance().aviso();
                    break;
                }
        }
    }
    
}
